{"version":3,"sources":["SharedData.js"],"names":["window","HS","undefined","String","prototype","capitalize","charAt","toUpperCase","slice","searchRunning","SharedData","currentSearch","callbacks","getClassCards","classQuery","runCallbacks","$","ajax","url","type","beforeSend","xhr","setRequestHeader","fail","err","console","log","name","done","data","findDuplicates","registerCallbacks","cb","push","forEach","searchSubmitted","prevResult","pushToMe","card"],"mappings":";;AAAA,IAAIA,OAAOC,EAAP,KAAcC,SAAlB,EAA6B;AAAEF,SAAOC,EAAP,GAAY,EAAZ;AAAiB;;AAEhD,CAAC,YAAM;;AAELE,SAAOC,SAAP,CAAiBC,UAAjB,GAA8B,YAAW;AACvC,WAAO,KAAKC,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+B,KAAKC,KAAL,CAAW,CAAX,CAAtC;AACD,GAFD;;AAIA,MAAIC,gBAAgB,KAApB;;AAEAT,SAAOC,EAAP,CAAUS,UAAV,GAAuB;;AAErBC,mBAAe,EAFM;;AAIrBC,eAAW,EAJU;;AAMrBC,mBAAe,uBAAUC,UAAV,EAAsB;AAAA;;AAEnCL,sBAAgB,IAAhB;AACA,WAAKE,aAAL,GAAqB,EAArB;AACA,WAAKI,YAAL;;AAEAC,QAAEC,IAAF,CAAO;AACLC,aAAK,gEAAgEJ,UADhE;AAELK,cAAM,KAFD;AAGLC,oBAAY,oBAAUC,GAAV,EAAe;AACzBA,cAAIC,gBAAJ,CAAqB,eAArB,EAAsC,oDAAtC;AACAD,cAAIC,gBAAJ,CAAqB,QAArB,EAA+B,kBAA/B;AACD;AANI,OAAP,EAQCC,IARD,CAQM,UAACC,GAAD,EAAS;;AAEbC,gBAAQC,GAAR,CAAYF,GAAZ;AACAf,wBAAgB,KAAhB;AACA,cAAKE,aAAL,GAAqB,CAAE,EAAEgB,MAAM,kBAAR,EAAF,CAArB;AACA,cAAKZ,YAAL;AAED,OAfD,EAgBCa,IAhBD,CAgBM,UAACC,IAAD,EAAU;;AAEdpB,wBAAgB,KAAhB;AACA,cAAKE,aAAL,GAAqB,MAAKmB,cAAL,CAAoBD,IAApB,CAArB;AACA,cAAKd,YAAL;AAED,OAtBD;AAwBD,KApCoB;;AAsCrBgB,uBAAmB,2BAAUC,EAAV,EAAc;AAC/B,WAAKpB,SAAL,CAAeqB,IAAf,CAAoBD,EAApB;AACD,KAxCoB;;AA0CrBjB,kBAAc,wBAAY;;AAExB,WAAKH,SAAL,CAAesB,OAAf,CAAuB,UAACF,EAAD,EAAQ;AAC7BA;AACD,OAFD;AAID,KAhDoB;;AAkDrBG,qBAAiB,2BAAY;AAC3B,aAAO1B,aAAP;AACD,KApDoB;;AAsDrBqB,oBAAgB,wBAASD,IAAT,EAAe;;AAE7B,UAAIO,UAAJ;AACA,UAAIC,WAAW,EAAf;;AAEAR,WAAKK,OAAL,CAAa,UAACI,IAAD,EAAU;;AAErB,YAAIA,KAAKX,IAAL,KAAcS,UAAd,IAA4BE,KAAKnB,IAAL,KAAc,MAA9C,EAAsD;AACpDkB,mBAASJ,IAAT,CAAcK,IAAd;AACD;;AAEDF,qBAAaE,KAAKX,IAAlB;AAED,OARD;;AAUA,aAAOU,QAAP;AACD;;AAtEoB,GAAvB;AA0ED,CAlFD","file":"SharedData.js","sourcesContent":["if (window.HS === undefined) { window.HS = {}; }\n\n(() => {\n\n  String.prototype.capitalize = function() {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n  }\n\n  var searchRunning = false;\n\n  window.HS.SharedData = {\n\n    currentSearch: [],\n\n    callbacks: [],\n\n    getClassCards: function (classQuery) {\n\n      searchRunning = true\n      this.currentSearch = []\n      this.runCallbacks();\n\n      $.ajax({\n        url: \"https://omgvamp-hearthstone-v1.p.mashape.com/cards/classes/\" + classQuery,\n        type: \"GET\",\n        beforeSend: function (xhr) {\n          xhr.setRequestHeader(\"X-Mashape-Key\", \"lfLi0pd5ComshP5lbLvR2GHC5uP6p1b7AOujsnP5aI9GJrDgG1\");\n          xhr.setRequestHeader(\"Accept\", \"application/json\");\n        }\n      })\n      .fail((err) => {\n\n        console.log(err);\n        searchRunning = false;\n        this.currentSearch = [ { name: \"No Results Found\" } ];\n        this.runCallbacks();\n\n      })\n      .done((data) => {\n\n        searchRunning = false;\n        this.currentSearch = this.findDuplicates(data);\n        this.runCallbacks();\n\n      })\n\n    },\n\n    registerCallbacks: function (cb) {\n      this.callbacks.push(cb)\n    },\n\n    runCallbacks: function () {\n\n      this.callbacks.forEach((cb) => {\n        cb();\n      });\n\n    },\n\n    searchSubmitted: function () {\n      return searchRunning;\n    },\n\n    findDuplicates: function(data) {\n  \n      var prevResult;\n      var pushToMe = [];\n\n      data.forEach((card) => {\n\n        if (card.name !== prevResult && card.type !== \"Hero\") {\n          pushToMe.push(card);\n        }\n\n        prevResult = card.name;\n\n      });\n\n      return pushToMe\n    }\n\n  }\n\n})()\n"]}